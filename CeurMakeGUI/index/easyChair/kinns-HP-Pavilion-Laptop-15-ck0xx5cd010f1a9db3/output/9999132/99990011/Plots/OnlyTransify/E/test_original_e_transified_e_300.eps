%!PS-Adobe-2.0 EPSF-2.0
%%Title: test_original_e_transified_e_300.eps
%%Creator: gnuplot 5.0 patchlevel 0
%%CreationDate: Fri May  6 10:59:46 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (test_original_e_transified_e_300.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 0)
  /Author (annl)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May  6 10:59:46 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
0.500 UL
LTa
1809 576 M
4247 0 V
stroke
1.000 UL
LTb
1809 576 M
63 0 V
4184 0 R
-63 0 V
stroke
1701 576 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0.01)]
] -60.0 MRshow
1.000 UL
LTb
1809 844 M
31 0 V
4216 0 R
-31 0 V
1809 1197 M
31 0 V
4216 0 R
-31 0 V
1809 1379 M
31 0 V
4216 0 R
-31 0 V
stroke
0.500 UL
LTa
1809 1465 M
4247 0 V
stroke
1.000 UL
LTb
1809 1465 M
63 0 V
4184 0 R
-63 0 V
stroke
1701 1465 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MRshow
1.000 UL
LTb
1809 1732 M
31 0 V
4216 0 R
-31 0 V
1809 2086 M
31 0 V
4216 0 R
-31 0 V
1809 2268 M
31 0 V
4216 0 R
-31 0 V
stroke
0.500 UL
LTa
1809 2354 M
4247 0 V
stroke
1.000 UL
LTb
1809 2354 M
63 0 V
4184 0 R
-63 0 V
stroke
1701 2354 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 1)]
] -60.0 MRshow
1.000 UL
LTb
1809 2621 M
31 0 V
4216 0 R
-31 0 V
1809 2975 M
31 0 V
4216 0 R
-31 0 V
1809 3156 M
31 0 V
4216 0 R
-31 0 V
stroke
0.500 UL
LTa
1809 3243 M
4247 0 V
stroke
1.000 UL
LTb
1809 3243 M
63 0 V
4184 0 R
-63 0 V
stroke
1701 3243 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 10)]
] -60.0 MRshow
1.000 UL
LTb
1809 3510 M
31 0 V
4216 0 R
-31 0 V
1809 3864 M
31 0 V
4216 0 R
-31 0 V
1809 4045 M
31 0 V
4216 0 R
-31 0 V
stroke
0.500 UL
LTa
1809 4131 M
4247 0 V
stroke
1.000 UL
LTb
1809 4131 M
63 0 V
4184 0 R
-63 0 V
stroke
1701 4131 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 100)]
] -60.0 MRshow
1.000 UL
LTb
1809 4399 M
31 0 V
4216 0 R
-31 0 V
1809 4753 M
31 0 V
4216 0 R
-31 0 V
stroke
0.500 UL
LTa
1809 576 M
0 4247 V
stroke
1.000 UL
LTb
1809 576 M
0 63 V
0 4184 R
0 -63 V
stroke
1809 396 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0.01)]
] -60.0 MCshow
1.000 UL
LTb
2077 576 M
0 31 V
0 4216 R
0 -31 V
2430 576 M
0 31 V
0 4216 R
0 -31 V
2612 576 M
0 31 V
0 4216 R
0 -31 V
stroke
0.500 UL
LTa
2698 576 M
0 4247 V
stroke
1.000 UL
LTb
2698 576 M
0 63 V
0 4184 R
0 -63 V
stroke
2698 396 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MCshow
1.000 UL
LTb
2965 576 M
0 31 V
0 4216 R
0 -31 V
3319 576 M
0 31 V
0 4216 R
0 -31 V
3501 576 M
0 31 V
0 4216 R
0 -31 V
stroke
0.500 UL
LTa
3587 576 M
0 4247 V
stroke
1.000 UL
LTb
3587 576 M
0 63 V
0 4184 R
0 -63 V
stroke
3587 396 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 1)]
] -60.0 MCshow
1.000 UL
LTb
3854 576 M
0 31 V
0 4216 R
0 -31 V
4208 576 M
0 31 V
0 4216 R
0 -31 V
4389 576 M
0 31 V
0 4216 R
0 -31 V
stroke
0.500 UL
LTa
4476 576 M
0 4247 V
stroke
1.000 UL
LTb
4476 576 M
0 63 V
0 4184 R
0 -63 V
stroke
4476 396 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
1.000 UL
LTb
4743 576 M
0 31 V
0 4216 R
0 -31 V
5097 576 M
0 31 V
0 4216 R
0 -31 V
5278 576 M
0 31 V
0 4216 R
0 -31 V
stroke
0.500 UL
LTa
5364 576 M
0 4184 V
0 63 V
stroke
1.000 UL
LTb
5364 576 M
0 63 V
0 4184 R
0 -63 V
stroke
5364 396 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 100)]
] -60.0 MCshow
1.000 UL
LTb
5632 576 M
0 31 V
0 4216 R
0 -31 V
5986 576 M
0 31 V
0 4216 R
0 -31 V
stroke
1809 4823 N
0 -4247 V
4247 0 V
0 4247 V
-4247 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
1809 576 M
6056 4823 L
stroke
LTb
LCb setrgbcolor
5788 576 M
0 4247 V
stroke
LTb
LCb setrgbcolor
1809 4555 M
4247 0 V
stroke
LTb
LCb setrgbcolor
5521 576 M
0 4247 V
stroke
LTb
LCb setrgbcolor
1809 4288 M
4247 0 V
stroke
LTb
963 2699 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true 0 (transified-e)]
] -60.0 MCshow
grestore
3932 126 M
[ [(Times-Roman) 180.0 0.0 true true 0 (original-e)]
] -60.0 MCshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
5097 4823 Crs
2501 2390 Crs
6056 4823 Crs
6056 4823 Crs
4525 3283 Crs
4960 4291 Crs
5459 4823 Crs
5322 4290 Crs
5462 4823 Crs
1809 576 Crs
2854 3949 Crs
3510 2815 Crs
4361 3537 Crs
4238 3353 Crs
2698 1424 Crs
2077 576 Crs
2501 1465 Crs
1809 576 Crs
6056 4823 Crs
2077 844 Crs
2233 576 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3081 2037 Crs
1809 1111 Crs
4259 3737 Crs
1809 576 Crs
1809 1819 Crs
5222 4823 Crs
2077 1197 Crs
1809 576 Crs
3830 2443 Crs
5186 4823 Crs
2077 2440 Crs
1809 576 Crs
5658 4823 Crs
6056 4508 Crs
6056 4149 Crs
1809 844 Crs
2344 1197 Crs
2077 844 Crs
4643 3774 Crs
2233 2424 Crs
4201 4823 Crs
4275 844 Crs
2612 3989 Crs
2077 844 Crs
2077 844 Crs
2077 844 Crs
2077 844 Crs
2077 1000 Crs
2077 844 Crs
2233 1111 Crs
2501 1268 Crs
2879 1000 Crs
6056 4823 Crs
2077 1000 Crs
4853 4823 Crs
2233 1111 Crs
1809 576 Crs
2344 1111 Crs
1809 1000 Crs
6056 4823 Crs
3213 2346 Crs
6056 4823 Crs
4959 3757 Crs
6056 4823 Crs
2233 1000 Crs
4643 3436 Crs
2657 1379 Crs
2344 1000 Crs
2657 2380 Crs
2501 1268 Crs
6056 4823 Crs
4919 3642 Crs
3095 1769 Crs
6056 4823 Crs
6056 4823 Crs
3342 2045 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
2612 1379 Crs
2501 1327 Crs
2612 1379 Crs
2560 1379 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
2698 1848 Crs
6056 4823 Crs
3630 4823 Crs
6056 4823 Crs
2698 1848 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
4113 2455 Crs
6056 4823 Crs
6056 4823 Crs
2768 1566 Crs
6056 4823 Crs
2344 1111 Crs
6056 4823 Crs
2925 1713 Crs
2854 1595 Crs
6056 4823 Crs
6056 4823 Crs
2501 1268 Crs
2879 1646 Crs
2903 1670 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
2501 1268 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
2965 2800 Crs
6056 4823 Crs
6056 4823 Crs
4515 3268 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
4717 3453 Crs
3979 2718 Crs
3213 1876 Crs
6056 4823 Crs
3036 1803 Crs
3036 2317 Crs
6056 4823 Crs
3800 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3135 1876 Crs
6056 4823 Crs
2799 1424 Crs
6056 4823 Crs
3122 2268 Crs
6056 4823 Crs
6056 4823 Crs
4146 2414 Crs
3563 2317 Crs
4852 3650 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3270 2037 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3528 2248 Crs
3438 2193 Crs
6056 4823 Crs
5605 4326 Crs
3223 2070 Crs
3270 2045 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3420 2175 Crs
4507 3294 Crs
5054 3038 Crs
3432 2193 Crs
5270 4021 Crs
5008 3670 Crs
3542 2291 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
4463 2959 Crs
3579 2313 Crs
5187 3265 Crs
6056 4823 Crs
6056 4823 Crs
5422 4234 Crs
3510 2317 Crs
3542 2291 Crs
5091 3904 Crs
3748 2510 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3667 2446 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
5496 4539 Crs
6056 4823 Crs
6056 4823 Crs
5072 3738 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3864 2589 Crs
6056 4823 Crs
3822 2578 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3727 2443 Crs
5310 4031 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
4031 2765 Crs
6056 4823 Crs
3934 2737 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
4733 3450 Crs
6056 4823 Crs
6056 4823 Crs
5609 4019 Crs
6056 4823 Crs
3787 3154 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
2768 1535 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
4731 3452 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
4661 3742 Crs
3796 4170 Crs
2430 1197 Crs
1809 576 Crs
2430 1111 Crs
2698 1502 Crs
6056 4823 Crs
2657 576 Crs
1809 576 Crs
2612 1848 Crs
4335 3191 Crs
1809 1535 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
1809 576 Crs
2077 844 Crs
2344 1937 Crs
6056 4823 Crs
3192 2418 Crs
2735 1834 Crs
4226 3734 Crs
1809 576 Crs
1809 576 Crs
4562 3278 Crs
2698 2346 Crs
5489 4823 Crs
2233 1379 Crs
3002 1197 Crs
1809 1327 Crs
2344 1197 Crs
3147 1803 Crs
1809 576 Crs
5650 4823 Crs
2233 1000 Crs
5159 4823 Crs
2612 2330 Crs
1809 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
5469 4823 Crs
5295 4823 Crs
5484 4823 Crs
5325 4823 Crs
3694 2492 Crs
3711 2520 Crs
4146 3277 Crs
2879 1465 Crs
4099 3356 Crs
4026 3335 Crs
6056 4823 Crs
5432 4823 Crs
5506 4823 Crs
5403 4074 Crs
6056 4823 Crs
3342 2330 Crs
4122 4080 Crs
4415 3506 Crs
1809 576 Crs
6056 4823 Crs
5394 4823 Crs
2612 1327 Crs
2903 1751 Crs
3095 844 Crs
6056 4823 Crs
5141 4823 Crs
6056 4823 Crs
1809 844 Crs
1809 576 Crs
2077 576 Crs
1809 844 Crs
1809 844 Crs
1809 576 Crs
1809 576 Crs
1809 576 Crs
1809 576 Crs
1809 844 Crs
1809 576 Crs
6056 4823 Crs
2657 1566 Crs
2735 1595 Crs
5579 4823 Crs
5648 4823 Crs
1809 844 Crs
3311 844 Crs
1809 576 Crs
1809 844 Crs
2612 844 Crs
4806 4823 Crs
1809 576 Crs
2698 1379 Crs
1809 844 Crs
2077 576 Crs
1809 844 Crs
1809 576 Crs
1809 844 Crs
1809 576 Crs
2077 844 Crs
2233 844 Crs
2077 844 Crs
2077 844 Crs
2077 1566 Crs
1809 1197 Crs
2233 4823 Crs
2612 2028 Crs
2430 1268 Crs
2344 1000 Crs
2735 1535 Crs
1809 576 Crs
2344 1000 Crs
2501 1111 Crs
4736 3538 Crs
1809 844 Crs
2077 844 Crs
3233 2216 Crs
3438 2216 Crs
3002 1834 Crs
2984 1876 Crs
2698 2418 Crs
6056 4823 Crs
5424 4535 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
2903 1646 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3036 1769 Crs
2560 1327 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
2077 844 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
3679 2317 Crs
2077 1000 Crs
6056 4823 Crs
2233 844 Crs
6056 4823 Crs
2768 1502 Crs
2077 1000 Crs
6056 4823 Crs
1809 576 Crs
2854 1889 Crs
3454 1803 Crs
6056 4823 Crs
2657 1379 Crs
2233 1000 Crs
2612 1268 Crs
6056 4823 Crs
6056 4823 Crs
2077 844 Crs
6056 4823 Crs
1809 576 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
2344 1000 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
4003 2817 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
4718 3513 Crs
3858 2629 Crs
2965 1732 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
2828 1621 Crs
1809 576 Crs
3311 2679 Crs
1809 844 Crs
6056 4823 Crs
6056 4823 Crs
6056 4823 Crs
% End plot #1
2.000 UL
LTb
1.000 UL
LTb
1809 4823 N
0 -4247 V
4247 0 V
0 4247 V
-4247 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
